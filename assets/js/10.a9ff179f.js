(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{408:function(t,_,s){"use strict";s.r(_);var r=s(27),v=Object(r.a)({},(function(){var t=this,_=t.$createElement,s=t._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"事件循环机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件循环机制"}},[t._v("#")]),t._v(" 事件循环机制")]),t._v(" "),s("h2",{attrs:{id:"_1-js是单线程的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-js是单线程的"}},[t._v("#")]),t._v(" 1.js是单线程的")]),t._v(" "),s("p",[t._v("（但H5 的Web Workers 可以实现多线程）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("例如 alert，会暂停当前主线程的执行，同时暂停异步线程的计时")])]),t._v(" "),s("li",[s("p",[t._v("所有回调函数，都在主线程队列执行")])]),t._v(" "),s("li",[s("p",[t._v("先执行同步代码，后执行异步代码的回调函数："),s("br"),t._v("\n先执行初始化代码（ "),s("strong",[t._v("3类：ajax，事件，setIemeout/Intervel 的声明代码")]),t._v(" ），即 "),s("strong",[t._v("同步代码")]),t._v("  然后在某个时刻执行他们的回调函数   ,  即"),s("strong",[t._v("异步代码")])])]),t._v(" "),s("li",[s("p",[t._v("设置成 单线程的目的是："),s("strong",[t._v("保证只有一个线程操作Dom")])])])]),t._v(" "),s("h2",{attrs:{id:"_2-执行机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-执行机制"}},[t._v("#")]),t._v(" 2.执行机制")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("分线程由 浏览器执行，不由js引擎执行，因为，"),s("strong",[t._v("浏览器是多线程的，js是单线程的")])])]),t._v(" "),s("li",[s("p",[t._v("不同的异步操作添加到任务队列的时机不同，"),s("br"),t._v("\n如 onclick, setTimeout, ajax 处理的方式都不同，这些异步操作是由浏览器内核的 webcore 来执行的，webcore 包含3种 webAPI，"),s("strong",[t._v("分别是 DOM Binding、network、timer模块。")])])]),t._v(" "),s("li",[s("p",[t._v("任务队列=消息队列=事件队列=callback queue"),s("br"),t._v("\n事件循环机制：主线程的所有同步任务（同步代码）执行完后，再查看任务队列是否有待执行的异步任务，如果有，按照顺序一个一个将其放入主线程，执行回调函数，异步任务（异步代码 ），执行完一个异步任务，再去查看任务队列 ，不断的查看,执行，循环下去。\n"),s("img",{attrs:{src:"https://images2015.cnblogs.com/blog/1094893/201704/1094893-20170419140631852-1337804828.png",alt:""}})])])]),t._v(" "),s("p",[t._v("js执行代码时，"),s("br"),t._v("\n先"),s("strong",[t._v("判断该段代码是同步任务还是异步任务")]),t._v("：\n同步任务直接放入主线程执行栈，异步任务 交给浏览器内核新开线程 执行，"),s("strong",[t._v("并注册事件表")]),t._v("，\n异步任务执行完后（时间到了，触发了事件）， 将 异步任务的"),s("strong",[t._v("回调函数")]),t._v("送入 任务队列（回调队列），\n"),s("strong",[t._v("等待主线程的同步任务执行完后")]),t._v("，查看任务队列里 是否有  异步任务   ，如果有 将任务队列的 "),s("strong",[t._v("回调函数送入 主线程 执行栈")]),t._v(" 执行，执行完后 ，再次查看 任务 队列 是否还有可执行的任务, "),s("strong",[t._v("不停的 检查，和执行")]),t._v(" 。")])])}),[],!1,null,null,null);_.default=v.exports}}]);